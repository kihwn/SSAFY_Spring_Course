<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- bean definitions here -->
	<bean class="com.ssafy.aop.Programmer" id="programmer"></bean>
	<bean class="com.ssafy.aop.MyAspect" id="myAspect"></bean>
	
	<!--  around가 아닌 before, after과 같이 하나하나 나누어서 처리하는 방식
	<aop:config>
		<aop:pointcut expression="execution(* *(..))" id="mypt"/>
		<aop:aspect ref="myAspect">
		 method 자리에 method 명을 적기. 
			<aop:before method="before" pointcut-ref="mypt"/>
			<aop:after-returning method="afterReturning" pointcut-ref="mypt" returning="num"/>
			<aop:after-throwing method="afterThrowing" pointcut-ref="mypt" throwing="th"/>
			<aop:after method="after" pointcut-ref = "mypt"/>
		</aop:aspect>
	</aop:config>
	-->
	
	<aop:config> <!-- 내가 aop의 설정파일을 적을 것이다. -->
		<aop:pointcut expression="execution(* *(..))" id="mypt"/>
		<aop:aspect ref="myAspect">
			<aop:around method="around" pointcut-ref="mypt"></aop:around>
		
		</aop:aspect>
	</aop:config>

</beans>